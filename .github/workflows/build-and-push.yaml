name: Build and Push Docker Images

on:
  push:
    branches:
      - master
    paths:   # 相关文件改动时触发
      - Dockerfile.alpine3.21
      - Dockerfile.bookworm
      - Dockerfile.bookworm-slim
      - .github/workflows/build-and-push.yaml
    tags:   # 创建标签时触发. 匹配形如 v1.2.3 格式 (语义化版本).
      - 'v*.*.*'
  release:   # 发布新的 release 时触发
    types:
      - published
  schedule:   # 每月 1 日和 15 日 00:00 UTC 自动触发
    - cron: '0 0 1,15 * *'
  workflow_dispatch:   # 手动触发

jobs:
  buildAndPush:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        include:
          - variant: alpine3.21
            platforms: linux/amd64,linux/386,linux/arm64/v8,linux/arm/v7,linux/riscv64
          - variant: bookworm
            platforms: linux/amd64,linux/386,linux/arm64/v8,linux/arm/v7,linux/mips64le
          - variant: bookworm-slim
            platforms: linux/amd64,linux/386,linux/arm64/v8,linux/arm/v7,linux/mips64le
    steps:
      - name: Check event source
        run: |
          echo "Triggered by: ${{ github.event_name }}"

      - name: Checkout repository
        uses: actions/checkout@v4

      # docker/setup-qemu-action should come before docker/setup-buildx-action
      - name: Set up QEMU for cross-platform builds
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Check QEMU binfmt
        run: ls /proc/sys/fs/binfmt_misc | grep qemu

      - name: Log in to GitHub Container Registry (ghcr.io)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set lowercase repo owner
        id: owner-lowercase
        run: echo "OWNER_LOWERCASE=$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Get short Git SHA
        id: sha-short
        run: echo "SHA_SHORT=$(echo ${GITHUB_SHA:0:7})" >> $GITHUB_OUTPUT

      - name: Set image tags
        id: set-tags
        run: |
          TAGS=""
          SHA=git-${{ steps.sha-short.outputs.SHA_SHORT }}
          DOCKERHUB_URL=docker.io/${{ secrets.DOCKERHUB_USERNAME }}/network-helper
          GHCR_URL=ghcr.io/${{ steps.owner-lowercase.outputs.OWNER_LOWERCASE }}/network-helper

          case "${{ matrix.variant }}" in
            alpine3.21)
              TAGS="${TAGS},${DOCKERHUB_URL}:${SHA}-alpine"
              TAGS="${TAGS},${DOCKERHUB_URL}:alpine"
              TAGS="${TAGS},${DOCKERHUB_URL}:alpine3.21"
              TAGS="${TAGS},${DOCKERHUB_URL}:latest-alpine"
              TAGS="${TAGS},${DOCKERHUB_URL}:latest-alpine3.21"
              TAGS="${TAGS},${GHCR_URL}:${SHA}-alpine"
              TAGS="${TAGS},${GHCR_URL}:alpine"
              TAGS="${TAGS},${GHCR_URL}:alpine3.21"
              TAGS="${TAGS},${GHCR_URL}:latest-alpine"
              TAGS="${TAGS},${GHCR_URL}:latest-alpine3.21"
              ;;
            bookworm-slim)
              TAGS="${TAGS},${DOCKERHUB_URL}:${SHA}-debian-slim"
              TAGS="${TAGS},${DOCKERHUB_URL}:debian-slim"
              TAGS="${TAGS},${DOCKERHUB_URL}:bookworm-slim"
              TAGS="${TAGS},${DOCKERHUB_URL}:latest-debian-slim"
              TAGS="${TAGS},${DOCKERHUB_URL}:latest-bookworm-slim"
              TAGS="${TAGS},${GHCR_URL}:${SHA}-debian-slim"
              TAGS="${TAGS},${GHCR_URL}:debian-slim"
              TAGS="${TAGS},${GHCR_URL}:bookworm-slim"
              TAGS="${TAGS},${GHCR_URL}:latest-debian-slim"
              TAGS="${TAGS},${GHCR_URL}:latest-bookworm-slim"
              ;;
            bookworm)
              TAGS="${TAGS},${DOCKERHUB_URL}:${SHA}-debian"
              TAGS="${TAGS},${DOCKERHUB_URL}:debian"
              TAGS="${TAGS},${DOCKERHUB_URL}:bookworm"
              TAGS="${TAGS},${DOCKERHUB_URL}:latest-debian"
              TAGS="${TAGS},${DOCKERHUB_URL}:latest-bookworm"
              TAGS="${TAGS},${DOCKERHUB_URL}:latest"
              TAGS="${TAGS},${GHCR_URL}:${SHA}-debian"
              TAGS="${TAGS},${GHCR_URL}:debian"
              TAGS="${TAGS},${GHCR_URL}:bookworm"
              TAGS="${TAGS},${GHCR_URL}:latest-debian"
              TAGS="${TAGS},${GHCR_URL}:latest-bookworm"
              TAGS="${TAGS},${GHCR_URL}:latest"
              ;;
          esac

          # 通用 tag
          TAGS="${TAGS},${DOCKERHUB_URL}:${SHA}-${{ matrix.variant }}"
          TAGS="${TAGS},${GHCR_URL}:${SHA}-${{ matrix.variant }}"

          # 格式化为多行
          echo "tags<<EOF" >> $GITHUB_OUTPUT
          echo "${TAGS#,}" | tr ',' '\n' >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .                                 # Build context is current directory
          file: ./Dockerfile.${{ matrix.variant }}   # Use the variant-specific Dockerfile
          pull: true                                 # Always pull the latest base image
          no-cache: true                             # Disable all layers cache during build
          push: true                                 # Push the image to registry after build
          platforms: ${{ matrix.platforms }}         # Target multi-platform builds
          tags: ${{ steps.set-tags.outputs.tags }}
