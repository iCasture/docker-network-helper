name: 'Set build metadata'
description: 'Set common build metadata like lowercase repo owner and short Git SHA'

outputs:
  owner:
    description: 'Repository owner name (original case)'
    value: ${{ steps.set-owner.outputs.owner }}
  owner-lowercase:
    description: 'Lowercase repository owner name'
    value: ${{ steps.set-owner.outputs.owner-lowercase }}
  sha-short:
    description: 'Short Git SHA (7 characters)'
    value: ${{ steps.set-sha.outputs.sha-short }}
  sha-full:
    description: 'Full Git SHA (40 characters)'
    value: ${{ steps.set-sha.outputs.sha-full }}
  date:
    description: 'Build date in CST'
    value: ${{ steps.date.outputs.value }}

runs:
  using: 'composite'
  steps:
    - name: Set repo owner (original and lowercase)
      id: set-owner
      shell: bash
      run: |
        echo "owner=${{ github.repository_owner }}" >> $GITHUB_OUTPUT
        echo "owner-lowercase=$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

    - name: Get Git SHA (short and full)
      id: set-sha
      shell: bash
      run: |
        echo "sha-short=$(echo ${GITHUB_SHA:0:7})" >> $GITHUB_OUTPUT
        echo "sha-full=$GITHUB_SHA" >> $GITHUB_OUTPUT

    - name: Install required packages if not present
      shell: bash
      run: |
        # Check if packages are installed, install if not present

        if ! dpkg -s coreutils >/dev/null 2>&1; then
          echo "Installing coreutils ..."
          sudo apt-get update && \
          DEBIAN_FRONTEND=noninteractive sudo apt-get install -y coreutils
        else
          echo "coreutils is already installed"
        fi

        if ! dpkg -s tzdata >/dev/null 2>&1; then
          echo "Installing tzdata ..."
          sudo apt-get update && \
          DEBIAN_FRONTEND=noninteractive sudo apt-get install -y tzdata
        else
          echo "tzdata is already installed"
        fi

    - name: Compute build timestamp (CST, ISO-8601 with milliseconds)
      id: date
      shell: bash
      run: |
        # e.g. 2025-09-06T22:24:57.132+08:00
        DATE=$(TZ=Asia/Shanghai date '+%Y-%m-%d')
        echo "value=$DATE" >> "$GITHUB_OUTPUT"
